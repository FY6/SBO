/************************************************************************ 
android/iphone/windows/linux声波通讯库
声波通讯库特征： 
准确性95%以上，其实一般是不会出错的。 
接口非常简单，有完整的示例，3分钟就可以让你的应用增加声波通讯功能 
抗干扰性强，基本上无论外界怎么干扰，信号都是准确的 
基本的编码为16进制，而通过编码可传输任何字符 
性能非常强，没有运行不了的平台，而且通过内存池优化，长时间解码不再分配新内存，可7*24小时运行 
可支持任何平台，常见的平台android, iphone, windows, linux, arm, mipsel都有示例 
详情可查看：http://blog.csdn.net/softlgh 
作者: 夜行侠 QQ:3116009971 邮件：3116009971@qq.com 
************************************************************************/  

#ifdef __cplusplus
extern "C" {
#endif

/************************************************************************/
/* 创建播放器
/* _sampleRateInHz为44100
/* _channel为单声道，1为单声道，2为立体声
/* _audioFormat为一个信号的bit数，单声道为16
/* _bufferSize为内部所使用的缓冲区大小
/************************************************************************/
int createPlayer(int _sampleRateInHz, int _channel, int _audioFormat, int _bufferSize, void **_pplay);

/************************************************************************/
/* 开始播放
/************************************************************************/
int startPlay(void *_player);

/************************************************************************/
/* 停止播放，需同步返回（销毁函数是真正停止后才能释放内存）
/************************************************************************/
int stopPlay(void *_player);

/************************************************************************/
/* 把播放数据不停的写入播放器
/* _audioData为cretePlayer时指定的音频数据格式的数据
/* _dataLen为需播放的音频数据长度
/************************************************************************/
int writePlayer(void *_player, char *_audioData, int _dataLen);

int flushPlayer(void *_player);

/************************************************************************/
/* 释放播放器资源
/************************************************************************/
int releasePlayer(void *_player);

#ifdef __cplusplus
}
#endif